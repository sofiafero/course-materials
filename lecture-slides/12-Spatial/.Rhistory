# Scatter plot
ggplot(log_data, aes(x = price, y = security_deposit))+
geom_point() +
labs(title = "Relationship Between Rental Price and Security Deposit")
# Binned scatter plot
log_data = log_data |>
mutate(deposit_bins = factor(ntile(log_security_deposit, 50)))
data3 = log_data |>
group_by(deposit_bins) |>
mutate(log_price_binned = mean(log_rental_price, na.rm = TRUE),
deposit_binned = mean(log_security_deposit, na.rm = TRUE))
ggplot(data3) +
geom_point(aes(x = log_security_deposit, y = log_rental_price, color = factor(deposit_bins)),
alpha = 0.5) +
geom_point(aes(x = deposit_binned, y = log_price_binned),
size = 3, color = "black") +
labs(title = "Relationship Between Log Rental Price and Log Security Deposit",
x = "Log Security Deposit", y = "Log Rental Price",
color = "Deposit Bins") +
theme_minimal()
# Load census
load("C:/Users/sofia/OneDrive/Desktop/Advanced Data Analytics/Assignment 7/ipums_census1980_men41-50.R")
ls()
census = data
# 5% random sample
set.seed(123) # for reproducibility
sample_data = census|> sample_frac(0.05)
census_sample = census|> sample_frac(0.05)
View(sample_data)
# Plot earnings vs schooling
ggplot(census_sample, aes(x = schooling, y = earnings)) +
geom_point(alpha = 0.3, position = position_jitter(width = 0.3, height = 0)) +
theme_minimal() +
labs(title = "Earnings vs Schooling (Random Sample)", x = "Years of Schooling", y = "Earnings")
head(census_sample)
# Plot earnings vs schooling
ggplot(census_sample, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.3, position = position_jitter(width = 0.3, height = 0)) +
theme_minimal() +
labs(title = "Earnings vs Schooling (Random Sample)", x = "Years of Schooling", y = "Earnings")
head(census_sample)
# Plot earnings vs schooling
ggplot(census_sample, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.3) +
theme_minimal() +
labs(title = "Earnings vs Schooling (Random Sample)", x = "Years of Schooling", y = "Earnings")
# Create bins for schooling
census = census |>
mutate(schooling_bins = factor(ntile(HIGRADE, 50)))
# Calculate mean earnings for each bin
census2 = census |>
group_by(schooling_bins) |>
summarize(earning_binned = mean(INCWAGE, na.rm = TRUE),
schooling_binned = mean(HIGRADE, na.rm = TRUE))
# Plotting  relationship between schooling and earnings
ggplot(census2, aes(x = HIGRADE, y = INCWAGE, color = schooling_bins)) +
geom_point(alpha = 0.5) +
geom_point(data = census2, aes(x = schooling_binned, y = earning_binned),
size = 3, color = "black") +
labs(title = "Earnings vs Schooling (Random Sample)",
x = "Years of Schooling",
y = "Earnings",
color = "Schooling Bins") +
theme_minimal()
# Plotting  relationship between schooling and earnings
ggplot(census2) +
geom_point(aes(x = HIGRADE, y = INCWAGE, color = factor(schooling_bins)),
alpha = 0.5) +
geom_point(aes(x = schooling_binned, y = earning_binned),
size = 3, color = "black") +
labs(title = "Earnings vs Schooling (Random Sample)",
x = "Years of Schooling",
y = "Earnings",
color = "Schooling Bins") +
theme_minimal()
head(census2)
# Create bins for schooling
census = census |>
mutate(schooling_bins = factor(ntile(HIGRADE, 50)))
# Calculate mean earnings for each bin
census2 = census |>
group_by(schooling_bins) |>
mutate(earning_binned = mean(INCWAGE, na.rm = TRUE),
schooling_binned = mean(HIGRADE, na.rm = TRUE))
head(census2)
# Plotting  relationship between schooling and earnings
ggplot(census2) +
geom_point(aes(x = HIGRADE, y = INCWAGE, color = factor(schooling_bins)),
alpha = 0.5) +
geom_point(aes(x = schooling_binned, y = earning_binned),
size = 3, color = "black") +
labs(title = "Earnings vs Schooling (Random Sample)",
x = "Years of Schooling",
y = "Earnings",
color = "Schooling Bins") +
theme_minimal()
# Linear regression
model <- lm_robust(INCWAGE ~ HIGRADE, data = census)
summary(model)
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = census)
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = census)
summary(polynomial_model)
# Bin regression using as_factor
bin_model <- lm_robust(INCWAGE ~ as_factor(HIGRADE), data = census)
# Bin regression using as_factor
bin_model <- lm_robust(INCWAGE ~ as_factor(HIGRADE), data = census)
summary(bin_model)
# Cubic splines with 6 degrees of freedom
spline_model <- lm_robust(INCWAGE ~ ns(HIGRADE, df = 6), data = census)
# Cubic splines with 6 degrees of freedom
spline_model <- lm_robust(INCWAGE ~ ns(HIGRADE, df = 6), data = census)
summary(spline_model)
# Fitted values and plot
# Get fitted values for each model
census_fit = census |>
mutate(
polynomial_pred = predict(polynomial_model),
bin_pred = predict(bin_model),
spline_pred = predict(spline_model)
)
# Cubic splines with 6 degrees of freedom
spline_model <- lm_robust(INCWAGE ~ ns(HIGRADE, df = 6), data = census)
summary(spline_model)
# Bin regression using as_factor
bin_model <- lm_robust(INCWAGE ~ as_factor(HIGRADE), data = census)
summary(bin_model)
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = census)
summary(polynomial_model)
# Linear regression model
model <- lm_robust(INCWAGE ~ HIGRADE, data = census)
summary(model)
# Create bins for schooling
census = census |>
mutate(schooling_bins = factor(ntile(HIGRADE, 50)))
# Calculate mean earnings for each bin
census2 = census |>
group_by(schooling_bins) |>
mutate(earning_binned = mean(INCWAGE, na.rm = TRUE),
schooling_binned = mean(HIGRADE, na.rm = TRUE))
head(census2)
# Plotting  relationship between schooling and earnings
ggplot(census2) +
geom_point(aes(x = HIGRADE, y = INCWAGE, color = factor(schooling_bins)),
alpha = 0.5) +
geom_point(aes(x = schooling_binned, y = earning_binned),
size = 3, color = "black") +
labs(title = "Earnings vs Schooling (Random Sample)",
x = "Years of Schooling",
y = "Earnings",
color = "Schooling Bins") +
theme_minimal()
# Local regression
ggplot(census2, aes(x = HIGRADE, y = INCWAGE)) +
geom_smooth()
# Plotting  relationship between schooling and earnings
ggplot(census2) +
geom_point(aes(x = HIGRADE, y = INCWAGE, color = factor(schooling_bins)),
alpha = 0.5) +
geom_point(aes(x = schooling_binned, y = earning_binned),
size = 3, color = "black") +
labs(title = "Earnings vs Schooling (Random Sample)",
x = "Years of Schooling",
y = "Earnings",
color = "Schooling Bins") +
theme_minimal()
# Local regression
ggplot(census2, aes(x = HIGRADE, y = INCWAGE)) +
geom_smooth()
View(polynomial_model)
(census_fit)
# Fitted values and plot
# Get fitted values for each model
census_fit = census |>
mutate(
polynomial_pred = predict(polynomial_model),
bin_pred = predict(bin_model),
spline_pred = predict(spline_model)
)
# Create bins for schooling
census = census |>
mutate(schooling_bins = factor(ntile(HIGRADE, 50)))
# Fitted values and plot
# Get fitted values for each model
census_fit = census |>
mutate(
polynomial_pred = predict(polynomial_model),
bin_pred = predict(bin_model),
spline_pred = predict(spline_model)
)
(census)
# Linear regression model
model <- lm_robust(INCWAGE ~ HIGRADE, data = census)
summary(model)
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = census)
summary(polynomial_model)
# Bin regression using as_factor
bin_model <- lm_robust(INCWAGE ~ as_factor(HIGRADE), data = census)
summary(bin_model)
# Cubic splines with 6 degrees of freedom
spline_model <- lm_robust(INCWAGE ~ ns(HIGRADE, df = 6), data = census)
summary(spline_model)
# Fitted values and plot
# Get fitted values for each model
census_fit = census |>
mutate(
polynomial_pred = predict(polynomial_model),
bin_pred = predict(bin_model),
spline_pred = predict(spline_model)
)
# Fitted values and plot
# Get fitted values for each model
predict(polynomial_model)
# Plot the fitted model
census$polynomial_pred = predict(polynomial_model)
rm(list=ls())
rm(list=ls())
library(tidyverse)
library(skimr)
library(estimatr)
library(fixest)
library(splines)
library(binsreg)
# load data
airbnb_data = read_csv("C:/Users/sofia/OneDrive/Desktop/Advanced Data Analytics/Assignment 7/airbnb_london_cleaned.csv")
# Look at data
head(airbnb_data)
summary(airbnb_data)
skimr::skim(airbnb_data)
skim(airbnb_data)
# Look at specific variables and remove missing values
data2 = airbnb_data |>
select(security_deposit, price)|>
filter(!is.na(security_deposit & is.na(price)))
summary(data2)
# Histogram for security deposit
ggplot(data2, aes(x = security_deposit)) +
geom_histogram(binwidth = 50) +
theme_minimal() +
labs(title = "Histogram of Security Deposit", x = "Security Deposit", y = "Count")
# Histogram for rental price
ggplot(data2, aes(x = price)) +
geom_histogram(binwidth = 25) +
theme_minimal() +
labs(title = "Histogram of Rental Price", x = "Price", y = "Count")
# Log-transform variables
log_data = data2 %>%
mutate(log_security_deposit = log(security_deposit),
log_rental_price = log(price))
# Scatter plot
ggplot(log_data, aes(x = price, y = security_deposit))+
geom_point() +
labs(title = "Relationship Between Rental Price and Security Deposit")
# Binned scatter plot
log_data = log_data |>
mutate(deposit_bins = factor(ntile(log_security_deposit, 50)))
data3 = log_data |>
group_by(deposit_bins) |>
mutate(log_price_binned = mean(log_rental_price, na.rm = TRUE),
deposit_binned = mean(log_security_deposit, na.rm = TRUE))
ggplot(data3) +
geom_point(aes(x = log_security_deposit, y = log_rental_price, color = factor(deposit_bins)),
alpha = 0.5) +
geom_point(aes(x = deposit_binned, y = log_price_binned),
size = 3, color = "black") +
labs(title = "Relationship Between Log Rental Price and Log Security Deposit",
x = "Log Security Deposit", y = "Log Rental Price",
color = "Deposit Bins") +
theme_minimal()
# Load census
load("C:/Users/sofia/OneDrive/Desktop/Advanced Data Analytics/Assignment 7/ipums_census1980_men41-50.R")
census = data
ls()
# 5% random sample
set.seed(123) # for reproducibility
census_sample = census|> sample_frac(0.05)
head(census_sample)
# Plot earnings vs schooling
ggplot(census_sample, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.3) +
theme_minimal() +
labs(title = "Earnings vs Schooling (Random Sample)", x = "Years of Schooling", y = "Earnings")
# Create bins for schooling
census = census |>
mutate(schooling_bins = factor(ntile(HIGRADE, 50)))
# Calculate mean earnings for each bin
census2 = census |>
group_by(schooling_bins) |>
mutate(earning_binned = mean(INCWAGE, na.rm = TRUE),
schooling_binned = mean(HIGRADE, na.rm = TRUE))
head(census2)
# Plotting  relationship between schooling and earnings
ggplot(census2) +
geom_point(aes(x = HIGRADE, y = INCWAGE, color = factor(schooling_bins)),
alpha = 0.5) +
geom_point(aes(x = schooling_binned, y = earning_binned),
size = 2, color = "black") +
labs(title = "Earnings vs Schooling (Random Sample)",
x = "Years of Schooling",
y = "Earnings",
color = "Schooling Bins") +
theme_minimal()
# Local regression
ggplot(census2, aes(x = HIGRADE, y = INCWAGE)) +
geom_smooth()
# Linear regression model
model <- lm_robust(INCWAGE ~ HIGRADE, data = census)
summary(model)
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = census)
summary(polynomial_model)
# Plot the fitted model
census$polynomial_pred = predict(polynomial_model)
# Plot the fitted model
data$polynomial_pred = predict(polynomial_model)
# Plot the fitted model
census$polynomial_pred = predict(polynomial_model, fit_data = census)
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = census)
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = census)
summary(polynomial_model)
summary(polynomial_model)
# Plot the fitted model
census$polynomial_pred = predict(polynomial_model, fit_data = census)
# Plot the fitted model
data$polynomial_pred = predict(polynomial_model, fit_data = census)
# Plot the fitted model
data$polynomial_pred = predict(polynomial_model, fit_data = data)
# Plot the fitted model
data$poly_fit = predict(polynomial_model, fit_data = data)
# Plot the fitted model
data$poly_fit = predict(polynomial_model, newdata = data)
ggplot(census, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.5) +
geom_line(aes(y = polynomial_pred), color = "blue", size = 1) +
labs(title = "Fourth-order Polynomial Regression: INCWAGE vs HIGRADE",
x = "Highest Grade Completed", y = "Annual Income") +
theme_minimal()
ggplot(census, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.5) +
geom_line(aes(y = poly_fit), color = "blue", size = 1) +
labs(title = "Fourth-order Polynomial Regression: INCWAGE vs HIGRADE",
x = "Highest Grade Completed", y = "Annual Income") +
theme_minimal()
ggplot(data, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.5) +
geom_line(aes(y = poly_fit), color = "blue", size = 1) +
labs(title = "Fourth-order Polynomial Regression: INCWAGE vs HIGRADE",
x = "Highest Grade Completed", y = "Annual Income") +
theme_minimal()
m
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = data)
# Fourth-order polynomial regression
polynomial_model <- lm_robust(INCWAGE ~ poly(HIGRADE, 4), data = data)
summary(polynomial_model)
# Plot the fitted model
data$poly_fit = predict(polynomial_model, newdata = data)
ggplot(data, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.5) +
geom_line(aes(y = poly_fit), color = "blue", size = 1) +
labs(title = "Fourth-order Polynomial Regression: INCWAGE vs HIGRADE",
x = "Highest Grade Completed", y = "Annual Income") +
theme_minimal()
# Plot the fitted model for bin regression
census$bin_pred <- predict(bin_model)
# Bin regression using as_factor
bin_model <- lm_robust(INCWAGE ~ as_factor(HIGRADE), data = census)
# Bin regression using as_factor
bin_model <- lm_robust(INCWAGE ~ as_factor(HIGRADE), data = census)
summary(bin_model)
summary(bin_model)
# Plot the fitted model for bin regression
census$bin_pred <- predict(bin_model)
# Plot the fitted model
data$bin_fit = predict(bin_model, newdata = data)
ggplot(data, aes(x = as_factor(HIGRADE), y = INCWAGE)) +
geom_point(alpha = 0.5) +
geom_line(aes(y = bin_pred, group = 1), color = "green", size = 1) +
labs(title = "Bin Regression: INCWAGE vs HIGRADE",
x = "Highest Grade Completed", y = "Annual Income") +
theme_minimal()
ggplot(data, aes(x = as_factor(HIGRADE), y = INCWAGE)) +
geom_point(alpha = 0.5) +
geom_line(aes(y = bin_fit, group = 1), color = "green", size = 1) +
labs(title = "Bin Regression: INCWAGE vs HIGRADE",
x = "Highest Grade Completed", y = "Annual Income") +
theme_minimal()
# Plot the fitted model
data$spline_fit = predict(spline_model, newdata = data)
# Cubic splines with 6 degrees of freedom
spline_model <- lm_robust(INCWAGE ~ ns(HIGRADE, df = 6), data = census)
# Plot the fitted model
data$spline_fit = predict(spline_model, newdata = data)
ggplot(data, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.5) +
geom_line(aes(y = spline_fit), color = "red", size = 1) +
labs(title = "Cubic Splines (6 df): INCWAGE vs HIGRADE",
x = "Highest Grade Completed", y = "Annual Income") +
theme_minimal()
ggplot(data, aes(x = HIGRADE, y = INCWAGE)) +
geom_point(alpha = 0.5) +
geom_line(aes(y = poly_fit), color = "blue", linewidth = 1) +
labs(title = "Fourth-order Polynomial Regression: INCWAGE vs HIGRADE",
x = "Highest Grade Completed", y = "Annual Income") +
theme_minimal()
0
library(knitr)
library(tidyverse)
library(gapminder)
library(data.table)
knitr::opts_chunk$set(
echo=T,
fig.align = "center",
out.width = "80%",
fig.height = 4,
cache = F,
dpi = 300,
warning = F,
message = F
)
library(knitr)
library(tidyverse)
library(gapminder)
library(data.table)
knitr::opts_chunk$set(
echo=T,
fig.align = "center",
out.width = "80%",
fig.height = 4,
cache = F,
dpi = 300,
warning = F,
message = F
)
library(fixest) # for fixed effects model
df <- read.csv("../data/df_yield_weather.csv")
library(fixest) # for fixed effects model
df <- read.csv("C:/Users/sofia/OneDrive/Desktop/Financial Econometrics/Exercise 7/df_yield_weather.csv")
lm(l.y_corn~eh,df)
feols(l.y_corn~eh,df)
feols(l.y_corn~eh|fips,df)
feols(l.y_corn~eh+factor(fips),df)
feols(I(l.y_corn-m.l.y_corn)~0+I(eh-m.eh),df)
feols(l.y_corn~eh+year|fips,df)
getwd()
# Load data
counties = st_read("data/california_counties/CaliforniaCounties.shp")
# Libraries
library(tidyverse)
library(sf)
library(tmap)
library(units)
# Libraries
library(tidyverse)
library(sf)
library(tmap)
library(units)
# Load data
counties = st_read("data/california_counties/CaliforniaCounties.shp")
# Quick Plots
plot(counties)
# Load data
counties = st_read("data/california_counties/CaliforniaCounties.shp") |>
st_make_valid)
library(rtools)
install.packages("rtools")
# Load data
counties = st_read("data/california_counties/CaliforniaCounties.shp") |>
st_make_valid()
setwd("C:/git/491/course-materials/lecture-slides/16-Spatial")
setwd("C:/git/491/course-materials/lecture-slides/16-Spatial")
getwd()
setwd("C:/Users/sofia/OneDrive/Documents/GitHub/course-materials/lecture-slides/16-Spatial")
# Load data
counties = st_read("data/california_counties/CaliforniaCounties.shp") |>
st_make_valid()
# Quick Plots
plot(counties["MED_AGE"])
qtm(counties)
tmap_mode("view")
qtm(counties)
view(counties[1:3])
counties_df = st_drop_geometry(counties)
# Data wrangling work normally
alameda = counties |> filter(NAME == "ALAMEDA")
qtm(alameda)
# Load data
counties = st_read("data/california_counties/CaliforniaCounties.shp") |>
st_make_valid()
# Quick Plots
plot(counties["MED_AGE"])
qtm(counties)
tmap_mode("view")
qtm(counties)
view(counties[1:3])
counties_df = st_drop_geometry(counties)
# Data wrangling work normally
alameda = counties |> filter(NAME == "ALAMEDA")
qtm(alameda)
# EXample tmap
tm_shape(counties) + tm+polygons()+
tm_shape(alameda) + tm_borders()
# Data wrangling work normally
alameda = counties |> filter(NAME == "ALAMEDA")
#challenge: use tmap to make a map of california counties,
# coloring them by median age
tm_shape(counties)+tm_polygons(col = "MED_AGE")
